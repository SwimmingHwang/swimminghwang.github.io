---
layout:     post
title:      프로그래머스) 완주하지 못한 선수 - 해시
author:     Soo-young Hwang
tags: 		Coding-test
subtitle:   Hash Table 
category:  study
---

<blockquote>문제</blockquote>
[프로그래머스 > 해시 > 완주하지 못한 선수](https://programmers.co.kr/learn/courses/30/lessons/42576)   

사용 언어 : `python3`      
개념 : 자료구조 해시 (python - dictionary)   

<blockquote>해시 테이블 (Hash Table)</blockquote>
해시 테이블은 연관배열 구조를 이용하여 키(key)에 결과 값(value)을 저장하는 자료구조이다.   

Insertion(저장) 시간복잡도 : `O(1) `  
Delection(삭제) 시간복잡도 : `O(1) `  
Search(검색) 시간복잡도 : `O(1)` , 최악(해시 충돌)의 경우 `O(n)`   


#### 내 풀이

**핵심**    
1) **동명이인이 여러 명일 수도 있음**을 고려하여 `+1`을 해 줘야 함.    
2) 시간복잡도를 생각하여 풀어야 함. 완전탐색(X) -> 해시 사용 (O)


{% highlight python %}

def solution(participant, completion):
    answer = ''
    hash = {}
    for name in completion:
        hash[name] = 0
    for name in completion:
        hash[name] += 1    
    for name in participant:
        if name not in hash:
            return name
        elif hash[name] != 0:
            hash[name] -= 1
        elif hash[name] == 0:
            return name

{% endhighlight %}

      
       
<p><h4>다른 풀이</h4></p>

python [collections](https://www.daleseo.com/python-collections-counter/)모듈의 `Counter` 클래스를 사용함.  
`collections`모듈의 `Counter`클래스는 파이썬의 기본 자료구조인 `dictionary`를 확장하고 있기 때문에, 딕셔너리에서 제공하는 API를 그대로 사용할 수 있다.

{% highlight python %}
from collections import Counter

Counter('hello world') 

# Counter({'l': 3, 'o': 2, 'h': 1, 'e': 1, ' ': 1, 'w': 1, 'r': 1, 'd': 1)
{% endhighlight %}

- Counter() 의 Input
    - List 
    - Dictionary 
    - value = count (ex. a=2, b=3, c=2)
    - String
- Counter() 의 Output
    - { key : 개수 } 딕셔너리 형태
- Counter 클래스의 methods
    - update() : Counter의 값을 갱신
    - elements() : 값을 풀어서 반환
    - most_common(n) : 빈도수가 높은 순으로 상위 n개를 리스트안의 투플 형태로 반환 
    - subtract() : 요소끼리 count 빼기. 요소가 없는 경우 음수의 값으로 출력
- Counter을 이용한 연산 
    - 산술/집합 연산이 가능함.
    - `+`
    - `-` : subtract()와 달리 음수값은 출력하지 않음.
    - 교집합
    - 합집합


아래의 코드는 Counter 클래스의 연산 `-`을 이용함.




{% highlight python %}
import collections


def solution(participant, completion):
    answer = collections.Counter(participant) - collections.Counter(completion)
    return list(answer.keys())[0]

{% endhighlight %}

### references
[프로그래머스](https://programmers.co.kr/learn/courses/30/lessons/42576)   
[Counter Class에 대한 설명](https://excelsior-cjh.tistory.com/94)