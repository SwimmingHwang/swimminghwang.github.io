I"&<blockquote>문제</blockquote>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42578">프로그래머스 &gt; 해시 &gt; 위장</a></p>

<p>사용 언어 : <code class="language-plaintext highlighter-rouge">python3</code>    <br />
개념 : 자료구조 해시 (python - dictionary)</p>

<blockquote>해시 테이블 (Hash Table)</blockquote>

<h4 id="-내-풀이">&gt; 내 풀이</h4>

<p><strong>핵심</strong>  <br />
1) 해시를 사용해야 함 <br />
2) 조합의 수 구하기</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">clothes</span><span class="p">):</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="nb">hash</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">for</span> <span class="n">cloth</span> <span class="ow">in</span> <span class="n">clothes</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">cloth</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">cloth</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">hash</span><span class="p">:</span>
            <span class="nb">hash</span><span class="p">[</span><span class="n">cloth</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="p">[(</span><span class="n">cloth</span><span class="p">[</span><span class="mi">0</span><span class="p">])]</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">li</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">li</span><span class="p">.</span><span class="n">extend</span><span class="p">(</span><span class="nb">hash</span><span class="p">[</span><span class="n">cloth</span><span class="p">[</span><span class="mi">1</span><span class="p">]])</span>
            <span class="n">li</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">cloth</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="nb">hash</span><span class="p">[</span><span class="n">cloth</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">li</span> 
    
    <span class="n">combine</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="k">for</span> <span class="n">h</span> <span class="ow">in</span> <span class="nb">hash</span><span class="p">:</span>
        <span class="n">combine</span> <span class="o">*=</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nb">hash</span><span class="p">[</span><span class="n">h</span><span class="p">])</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">combine</span><span class="p">)</span>
        
    <span class="k">return</span> <span class="n">combine</span> <span class="o">-</span><span class="mi">1</span></code></pre></figure>

<p><h4> &gt; 다른 풀이</h4></p>

<p>1) <code class="language-plaintext highlighter-rouge">reduce</code> 함수 사용</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">functools</code> 모듈의 <code class="language-plaintext highlighter-rouge">reduce</code> 함수</li>
</ul>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">sum</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span> 
<span class="p">...</span> <span class="k">return</span> <span class="n">x</span><span class="o">+</span><span class="n">y</span> 
<span class="p">...</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="nb">reduce</span><span class="p">(</span><span class="nb">sum</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span> 
<span class="mi">15</span></code></pre></figure>

<ul>
  <li>lamda 를 통해 아래처럼도 표현 가능</li>
</ul>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="nb">reduce</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>
<span class="mi">15</span></code></pre></figure>

<p>2) <code class="language-plaintext highlighter-rouge">collections</code> 모듈의 <code class="language-plaintext highlighter-rouge">Counter</code> 클래스 사용</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">collections</code>모듈의 <code class="language-plaintext highlighter-rouge">Counter</code>클래스는 파이썬의 기본 자료구조인 <code class="language-plaintext highlighter-rouge">dictionary</code>를 확장하고 있기 때문에, 딕셔너리에서 제공하는 API를 그대로 사용할 수 있다.(<a href="https://swimminghwang.github.io/study/2020/06/29/ct-001/">지난 문제에서도 사용</a>)</li>
</ul>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="c1"># 1
</span>
<span class="kn">import</span> <span class="nn">collections</span>
<span class="kn">from</span> <span class="nn">functools</span> <span class="kn">import</span> <span class="nb">reduce</span>

<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">c</span><span class="p">):</span>
    <span class="k">return</span> <span class="nb">reduce</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">:</span><span class="n">x</span><span class="o">*</span><span class="n">y</span><span class="p">,[</span><span class="n">a</span><span class="o">+</span><span class="mi">1</span> <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">collections</span><span class="p">.</span><span class="n">Counter</span><span class="p">([</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">c</span><span class="p">]).</span><span class="n">values</span><span class="p">()])</span><span class="o">-</span><span class="mi">1</span>

<span class="c1"># 2
</span>
<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">clothes</span><span class="p">):</span>
    <span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">Counter</span>
    <span class="kn">from</span> <span class="nn">functools</span> <span class="kn">import</span> <span class="nb">reduce</span>
    <span class="n">cnt</span> <span class="o">=</span> <span class="n">Counter</span><span class="p">([</span><span class="n">kind</span> <span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">kind</span> <span class="ow">in</span> <span class="n">clothes</span><span class="p">])</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="nb">reduce</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">x</span><span class="o">*</span><span class="p">(</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span> <span class="n">cnt</span><span class="p">.</span><span class="n">values</span><span class="p">(),</span> <span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">answer</span></code></pre></figure>

<h4 id="-배운-점">&gt; 배운 점</h4>
<ul>
  <li>list 쌍 자료형에서 hash로 변환할 때, <code class="language-plaintext highlighter-rouge">for cloth in clothes:</code> 보다 <code class="language-plaintext highlighter-rouge">for name, kind in clothes</code> 이렇게 표현하고 사용하는게 가독성이 더 좋다.</li>
  <li>직접 딕셔너리 자료형에 key와 value를 삽입하여 hash 자료형을 만들 수 있지만, <code class="language-plaintext highlighter-rouge">Counter</code>클래스를 사용하여 더 간결하게 hash 자료형을 만들 수 있다.</li>
  <li>for문을 통해 직접 곱할 수도 있었지만 reduce함수와 lambda를 이용하면 더 간결하게 코드를 작성할 수 있다.</li>
</ul>

<h3 id="references">references</h3>
<p><a href="https://codepractice.tistory.com/86">참고사이트 - reduce함수</a></p>
:ET