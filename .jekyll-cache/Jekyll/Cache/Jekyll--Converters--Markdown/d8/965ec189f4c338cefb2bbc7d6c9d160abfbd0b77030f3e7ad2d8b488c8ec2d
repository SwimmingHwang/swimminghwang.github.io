I"#{<h1 id="two-pointers">Two pointers</h1>

<p>투포인터 알고리즘은 리스트에 순차적으로 접근해야 할 때2개의 점의 위치를 기록하면서 처리하는 알고리즘을 의미한다.</p>

<blockquote>
  <p>투포인터 알고리즘을 이용해 풀 수 있는 문제 유형</p>

  <p>(투포인터 알고리즘은 구현 가능한 방식이 매우 많음)</p>
</blockquote>

<h3 id="문제1-특정한-합m을-가지는-부분-연속-수열-경우의-수-찾기">문제1) 특정한 합(M)을 가지는 부분 연속 수열 경우의 수 찾기</h3>

<ul>
  <li>부분 연속 수열의 시작점과 끝점 start, end 가 인덱스 0 을 가리킨다</li>
  <li>현재 부분 합이 M과 같다면 카운트</li>
  <li>현재 부분 합이 M보다 작으면 end 를 1 증가
    <ul>
      <li>부분합 늘리기</li>
    </ul>
  </li>
  <li>현재 부분합이 M보다 크거나 같으면 start를 1증가
    <ul>
      <li>부분합 줄이기</li>
    </ul>
  </li>
  <li>모든 경우를 확인할 때 까지 반복</li>
</ul>

<p>이 문제를 투포인터 알고리즘으로 해결할 수 있는 이유는 기본적으로
시작점을 오른쪽으로 이동시키면 항상 합이 감소하고,
끝점을 오른쪽으로 이동시키면 항상 합이 증가하기 때문이다.</p>

<p>*만약에 리스트 내 원소에 음수 데이터가 포함되어 있는 경우에는 투 포인터 알고리즘으로 문제를 해결할 수 없다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">twopointers</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.InputStreamReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.StringTokenizer</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">연속부분수열</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">solution1</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">m</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">lt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">rt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">rt</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">rt</span><span class="o">++)</span> <span class="o">{</span> <span class="c1">// 증가하고</span>
      <span class="n">sum</span> <span class="o">+=</span> <span class="n">arr</span><span class="o">[</span><span class="n">rt</span><span class="o">];</span> <span class="c1">// 더하고</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">m</span><span class="o">)</span> <span class="n">answer</span><span class="o">++;</span> <span class="c1">// 확인</span>
      <span class="k">while</span> <span class="o">(</span><span class="n">sum</span> <span class="o">&gt;=</span> <span class="n">m</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">sum</span> <span class="o">-=</span> <span class="n">arr</span><span class="o">[</span><span class="n">lt</span><span class="o">++];</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">m</span><span class="o">)</span> <span class="n">answer</span><span class="o">++;</span> <span class="c1">// 빼고나서도 다시 확인</span>
      <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">solution2</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">m</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">){</span>
    <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">intervalSum</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="kt">int</span> <span class="n">end</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="c1">// start를 차례대로 증가시키며 반복</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">start</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">start</span><span class="o">++)</span> <span class="o">{</span>
      <span class="c1">// end를 가능한 만큼 이동시키기</span>
      <span class="k">while</span> <span class="o">(</span><span class="n">intervalSum</span> <span class="o">&lt;</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="n">end</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">intervalSum</span> <span class="o">+=</span> <span class="n">arr</span><span class="o">[</span><span class="n">end</span><span class="o">];</span>
        <span class="n">end</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
      <span class="o">}</span>
      <span class="c1">// 부분합이 m일 때 카운트 증가</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">intervalSum</span> <span class="o">==</span> <span class="n">m</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">cnt</span> <span class="o">+=</span> <span class="mi">1</span><span class="o">;</span>
      <span class="o">}</span>
      <span class="n">intervalSum</span> <span class="o">-=</span> <span class="n">arr</span><span class="o">[</span><span class="n">start</span><span class="o">];</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">cnt</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="cm">/*
  내가 푼 방법
  - 반례 1 1 -&gt; 1 : 바로 정답인 경우 케이스 추가 필요 -&gt; 추가 함
   */</span>
  <span class="kd">private</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">m</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">arr</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
    <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">end</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">end</span> <span class="o">==</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="n">start</span> <span class="o">==</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">)){</span>
        <span class="n">answer</span><span class="o">++;</span>
        <span class="k">break</span><span class="o">;</span>
      <span class="o">}</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">sum</span> <span class="o">&lt;</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="n">end</span> <span class="o">==</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">sum</span> <span class="o">&gt;</span> <span class="n">m</span> <span class="o">&amp;&amp;</span> <span class="n">start</span> <span class="o">==</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>

      <span class="k">if</span> <span class="o">(</span><span class="n">sum</span> <span class="o">==</span> <span class="n">m</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">answer</span><span class="o">++;</span>
        <span class="n">sum</span> <span class="o">=</span> <span class="n">sum</span> <span class="o">-</span> <span class="n">arr</span><span class="o">[</span><span class="n">start</span><span class="o">++]</span> <span class="o">+</span> <span class="n">arr</span><span class="o">[++</span><span class="n">end</span><span class="o">];</span>
      <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">sum</span> <span class="o">&lt;</span> <span class="n">m</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">sum</span> <span class="o">+=</span> <span class="n">arr</span><span class="o">[++</span><span class="n">end</span><span class="o">];</span>
      <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
        <span class="n">sum</span> <span class="o">-=</span> <span class="n">arr</span><span class="o">[</span><span class="n">start</span><span class="o">++];</span>
      <span class="o">}</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
    <span class="n">연속부분수열</span> <span class="no">T</span> <span class="o">=</span> <span class="k">new</span> <span class="n">연속부분수열</span><span class="o">();</span>
    <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
    <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>

    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
    <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>

    <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
    <span class="kt">int</span><span class="o">[]</span> <span class="n">arr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
      <span class="n">arr</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
    <span class="o">}</span>
    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="no">T</span><span class="o">.</span><span class="na">solution</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="n">m</span><span class="o">,</span> <span class="n">arr</span><span class="o">));</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="문제2-정렬되어-있는-두-리스트의-합집합">문제2) 정렬되어 있는 두 리스트의 합집합</h3>

<p>*무조건 정렬이 되어 있어야 한다.</p>

<ul>
  <li>정렬된 리스트  A, B</li>
  <li>리스트 A에서 처리되지 않은 원소중 가장 작은 원소를 i가 가리킨다</li>
  <li>리스트 B에서 처리되지 않은 원소중 가장 작은 원소를 j가 가리킨다</li>
  <li>A[i], B[j] 중 더 작은 원소를 결과리스트에 담는다</li>
  <li>처리할 원소가 없을 때 까지 반복</li>
</ul>

<p><strong>이 알고리즘의 시간 복잡도는 O(N+M)</strong>      <br />
=&gt; 단순히 각 리스트의 모든 원소를 한 번씩만 순회하면 되기 때문에</p>

<p>이 알고리즘의 경우 병합 정렬과 같은 일부 알고리즘에서 사용되고 있다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">twopointers</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">두배열합치기</span> <span class="o">{</span>
  <span class="kd">public</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="nf">solution1</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">m</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">b</span><span class="o">){</span>
    <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
    <span class="kt">int</span> <span class="n">p1</span><span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">p2</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
    <span class="k">while</span><span class="o">(</span><span class="n">p1</span><span class="o">&lt;</span><span class="n">n</span> <span class="o">&amp;&amp;</span> <span class="n">p2</span><span class="o">&lt;</span><span class="n">m</span><span class="o">){</span>
      <span class="k">if</span><span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">p1</span><span class="o">]&lt;</span><span class="n">b</span><span class="o">[</span><span class="n">p2</span><span class="o">])</span> <span class="n">answer</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">p1</span><span class="o">++]);</span>
      <span class="k">else</span> <span class="n">answer</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">[</span><span class="n">p2</span><span class="o">++]);</span>
    <span class="o">}</span>
    <span class="k">while</span><span class="o">(</span><span class="n">p1</span><span class="o">&lt;</span><span class="n">n</span><span class="o">)</span> <span class="n">answer</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">a</span><span class="o">[</span><span class="n">p1</span><span class="o">++]);</span>
    <span class="k">while</span><span class="o">(</span><span class="n">p2</span><span class="o">&lt;</span><span class="n">m</span><span class="o">)</span> <span class="n">answer</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">b</span><span class="o">[</span><span class="n">p2</span><span class="o">++]);</span>
    <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">m</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arrA</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arrB</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span><span class="o">[]</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span> <span class="o">+</span> <span class="n">m</span><span class="o">];</span>
    <span class="kt">int</span> <span class="n">ai</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">bi</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="o">+</span> <span class="n">m</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">ai</span> <span class="o">&gt;=</span> <span class="n">n</span><span class="o">)</span> <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">arrB</span><span class="o">[</span><span class="n">bi</span><span class="o">++];</span>
      <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">bi</span> <span class="o">&gt;=</span> <span class="n">m</span><span class="o">)</span> <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">arrA</span><span class="o">[</span><span class="n">ai</span><span class="o">++];</span>
      <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">arrA</span><span class="o">[</span><span class="n">ai</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">arrB</span><span class="o">[</span><span class="n">bi</span><span class="o">])</span> <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">arrA</span><span class="o">[</span><span class="n">ai</span><span class="o">++];</span>
      <span class="k">else</span> <span class="n">answer</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">arrB</span><span class="o">[</span><span class="n">bi</span><span class="o">++];</span>
    <span class="o">}</span>
    <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
    <span class="n">두배열합치기</span> <span class="no">T</span> <span class="o">=</span> <span class="k">new</span> <span class="n">두배열합치기</span><span class="o">();</span>
    <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
    <span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
    <span class="kt">int</span><span class="o">[]</span> <span class="n">arrA</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
      <span class="n">arrA</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
    <span class="o">}</span>
    <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
    <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
    <span class="kt">int</span><span class="o">[]</span> <span class="n">arrB</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">m</span><span class="o">];</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
      <span class="n">arrB</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
    <span class="o">}</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">:</span> <span class="no">T</span><span class="o">.</span><span class="na">solution</span><span class="o">(</span><span class="n">n</span><span class="o">,</span> <span class="n">m</span><span class="o">,</span> <span class="n">arrA</span><span class="o">,</span> <span class="n">arrB</span><span class="o">))</span> <span class="o">{</span>
      <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">x</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="문제3-정렬되어-있는-두-리스트의-교집합">문제3) 정렬되어 있는 두 리스트의 교집합</h3>

<p>*무조건 정렬이 되어 있어야 한다.</p>

<ul>
  <li>정렬된 리스트  A, B</li>
  <li>리스트 A에서 처리되지 않은 원소중 가장 작은 원소를 i가 가리킨다</li>
  <li>리스트 B에서 처리되지 않은 원소중 가장 작은 원소를 j가 가리킨다</li>
  <li>A[i], B[j] 같으면 결과리스트에 담는다.</li>
  <li>A[i] &lt; B[j], 값이 작은 배열의 포인터 i를 증가시킨다</li>
  <li>혹은, A[i] &gt; B[j], 값이 작은 배열의 포인터 j를 증가시킨다</li>
  <li>둘 중 하나의 포인터가 끝에 다다르면 종료</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span> <span class="n">n</span><span class="o">,</span> <span class="kt">int</span> <span class="n">m</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arrA</span><span class="o">,</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">arrB</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">answer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
    <span class="kt">int</span> <span class="n">p1</span> <span class="o">=</span> <span class="mi">0</span><span class="o">,</span> <span class="n">p2</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">arrA</span><span class="o">);</span> <span class="c1">// 오름차순 정렬</span>
    <span class="nc">Arrays</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">arrB</span><span class="o">);</span> <span class="c1">// 오름차순 정렬</span>

    <span class="k">while</span><span class="o">(</span><span class="n">p1</span><span class="o">&lt;</span><span class="n">n</span> <span class="o">&amp;&amp;</span> <span class="n">p2</span> <span class="o">&lt;</span><span class="n">m</span><span class="o">){</span>
      <span class="k">if</span><span class="o">(</span><span class="n">arrA</span><span class="o">[</span><span class="n">p1</span><span class="o">]</span> <span class="o">==</span> <span class="n">arrB</span><span class="o">[</span><span class="n">p2</span><span class="o">])</span> <span class="o">{</span>
        <span class="n">answer</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">arrA</span><span class="o">[</span><span class="n">p1</span><span class="o">]);</span>
        <span class="n">p1</span><span class="o">++;</span>
        <span class="n">p2</span><span class="o">++;</span>
      <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">arrA</span><span class="o">[</span><span class="n">p1</span><span class="o">]</span> <span class="o">&lt;</span> <span class="n">arrB</span><span class="o">[</span><span class="n">p2</span><span class="o">])</span> <span class="n">p1</span><span class="o">++;</span>
       <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">arrA</span><span class="o">[</span><span class="n">p1</span><span class="o">]</span> <span class="o">&gt;</span> <span class="n">arrB</span><span class="o">[</span><span class="n">p2</span><span class="o">])</span> <span class="n">p2</span><span class="o">++;</span>
    <span class="o">}</span>

    <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
  <span class="o">}</span>
</code></pre></div></div>

<p>이러한 문제는 코딩 인터뷰에서 손코딩 문제로 출제될 수 있으니 잘 기억하고 있자.</p>

:ET