I"K+<h4 id="라이브러리-github">라이브러리 github</h4>
<p><a href="https://github.com/Stuk/jszip/tree/master/dist">https://github.com/Stuk/jszip/tree/master/dist</a></p>

<h4 id="웹단-코드">웹단 코드</h4>
<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">$</span><span class="p">.</span><span class="nx">getScript</span><span class="p">(</span><span class="dl">"</span><span class="s2">/js/vendor/jszip.js</span><span class="dl">"</span><span class="p">)</span>
<span class="nx">$</span><span class="p">.</span><span class="nx">getScript</span><span class="p">(</span><span class="dl">"</span><span class="s2">/js/vendor/jszip.min.js</span><span class="dl">"</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//업로드 파일 zip</span>
<span class="nx">sendCommon</span><span class="p">.</span><span class="nx">targetFileZip</span><span class="p">(</span><span class="nx">mtSend</span><span class="p">.</span><span class="nx">targetJson</span><span class="p">,</span> <span class="nx">mtSend</span><span class="p">.</span><span class="nx">targetFileList</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">name</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span><span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">mtSend</span><span class="p">.</span><span class="nx">zipblob</span> <span class="o">=</span><span class="nx">res</span>
<span class="p">});</span>
</code></pre></div></div>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">targetFileZip</span> <span class="p">(</span><span class="nx">targetJson</span><span class="p">,</span><span class="nx">fileName</span><span class="p">){</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">(</span><span class="nx">resolve</span><span class="o">=&gt;</span> <span class="p">{</span>
		<span class="nx">letcontent</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">[</span><span class="se">\n</span><span class="dl">"</span> <span class="o">+</span>
		<span class="nx">targetJson</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">entry</span><span class="o">=&gt;</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">entry</span><span class="p">)).</span><span class="nx">join</span><span class="p">(</span><span class="dl">"</span><span class="s2">,</span><span class="se">\n</span><span class="dl">"</span><span class="p">)</span> <span class="o">+</span>
		        <span class="dl">"</span><span class="se">\n</span><span class="s2">]</span><span class="dl">"</span><span class="p">;</span>
		<span class="nx">letzip</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">JSZip</span><span class="p">();</span>
		    <span class="nx">zip</span><span class="p">.</span><span class="nx">file</span><span class="p">(</span><span class="nx">fileName</span><span class="o">+</span><span class="dl">'</span><span class="s1">.txt</span><span class="dl">'</span><span class="p">,</span> <span class="nx">content</span><span class="p">,{</span>
		      <span class="na">compression</span><span class="p">:</span> <span class="dl">"</span><span class="s2">DEFLATE</span><span class="dl">"</span><span class="p">,</span> <span class="na">compressionOptions</span><span class="p">:</span> <span class="p">{</span> <span class="na">level</span><span class="p">:</span> <span class="mi">1</span><span class="p">}});</span>
		    <span class="nx">zip</span><span class="p">.</span><span class="nx">generateAsync</span><span class="p">({</span><span class="na">type</span><span class="p">:</span><span class="dl">'</span><span class="s1">blob</span><span class="dl">'</span><span class="p">})</span>
		    <span class="p">.</span><span class="nx">then</span> <span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">blob</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">blob</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span><span class="nx">fileName</span><span class="o">+</span><span class="dl">'</span><span class="s1">.txt.zip</span><span class="dl">'</span>
		<span class="nx">resolve</span><span class="p">(</span><span class="nx">blob</span><span class="p">)</span>
		    <span class="p">})</span>
  <span class="p">})</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="백단-코드">백단 코드</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">publicList</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="nf">saveFile</span><span class="o">(</span><span class="nc">MultipartFile</span><span class="o">[]</span><span class="n">targetFileList</span><span class="o">)</span>
    <span class="n">throwsCustomException</span><span class="o">{</span>
    <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">targetFileNameList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="o">...</span>

    <span class="nc">StringBuildertargetFileName</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">(</span><span class="n">dirName</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">"/"</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">fileName</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">fileName</span><span class="o">.</span><span class="na">length</span><span class="o">()-</span><span class="mi">4</span><span class="o">);</span>
    <span class="nc">StringBuilderfilePath</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">(</span><span class="n">basePath</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">"/"</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">targetFileName</span><span class="o">);</span>

    <span class="k">try</span> <span class="o">{</span>
        <span class="nc">ZipInputStreaminputStream</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ZipInputStream</span><span class="o">(</span><span class="n">mf</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">());</span>
        <span class="nc">Pathpath</span> <span class="o">=</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">basePath</span> <span class="o">+</span> <span class="s">"/"</span> <span class="o">+</span> <span class="n">dirName</span> <span class="o">+</span> <span class="s">"/"</span><span class="o">);</span>
            <span class="k">for</span> <span class="o">(</span><span class="nc">ZipEntryentry</span><span class="o">;</span> <span class="o">(</span><span class="n">entry</span> <span class="o">=</span> <span class="n">inputStream</span><span class="o">.</span><span class="na">getNextEntry</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">;</span> <span class="o">)</span> <span class="o">{</span>
                <span class="nc">PathresolvedPath</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="na">resolve</span><span class="o">(</span><span class="n">filePath</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                <span class="k">if</span> <span class="o">(!</span><span class="n">entry</span><span class="o">.</span><span class="na">isDirectory</span><span class="o">())</span> <span class="o">{</span>
                    <span class="nc">Files</span><span class="o">.</span><span class="na">createDirectories</span><span class="o">(</span><span class="n">resolvedPath</span><span class="o">.</span><span class="na">getParent</span><span class="o">());</span>
                    <span class="nc">Files</span><span class="o">.</span><span class="na">copy</span><span class="o">(</span><span class="n">inputStream</span><span class="o">,</span> <span class="n">resolvedPath</span><span class="o">);</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="nc">Files</span><span class="o">.</span><span class="na">createDirectories</span><span class="o">(</span><span class="n">resolvedPath</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">IOExceptione</span><span class="o">){</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">CustomException</span><span class="o">(</span><span class="nc">HttpStatus</span><span class="o">.</span><span class="na">INTERNAL_SERVER_ERROR</span><span class="o">,</span> <span class="mi">123</span><span class="o">,</span> <span class="s">"파일 업로드 실패"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="n">targetFileNameList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">targetFileName</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
    <span class="o">}</span>
  <span class="k">return</span> <span class="n">targetFileNameList</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p>웹에서 json 파일을 txt 파일로 저장해서 서버로 저장하는 과정에서 ㅅ엑셀파일보다 텍스트 파일의 용량이 너무 컸다.  이문제를 해결하려고 압축해서 전송하고 unzip하려했는데,</p>

<p>생각보다 zip하는데 성능이 안 좋았다.</p>

<p>java에서 unzip의 성능은 괜찮았는데 자바스크립트 단에서 속도가 너무 안 났다. (29MB 를 zip 하는데 5초 이상 걸렸다)</p>

<p>JSzip  라이브러리에 성능 문제가 존재 했다. 라이브러리를 이용해 구현할 때 라이브러리의 성능 또한 고려해야 함을 배웠다.</p>

<p><a href="https://stuk.github.io/jszip/documentation/limitations.html">https://stuk.github.io/jszip/documentation/limitations.html</a></p>
:ET